<menumain x="0" y="0" width="100%" height="100%" fadetime="0" scaletvx="35%" scaletvy="15%" scaletvwidth="65%" scaletvheight="80%" >
    <!-- Available Variables header:
    {title}                   title of current menu
    {vdrversion}              running VDR Version
    {hasicon}                 true if a menu icon is available
    {icon}                    path of menu icon
    -->
    <header>
        <area x="1%" y="0" width="64%" height="10%" layer="3">
            <drawimage imagetype="icon" path="ico_vdrlogo" x="0" valign="center" width="{areaheight} * 0.9 * 160 / 70" height="{areaheight}*0.9"/>
            <drawtext x="{areaheight} * 0.9 * 160 / 70 + 10" valign="center" font="{vdrOsd}" fontsize="50%" color="{clrGold}" text="{vdrversion}" />
        </area>
    </header>

    <!-- Available Variables timers:
    {numtimers}                  number of active timers (max. 15 timers will be displayed)
    {numtimerconflicts}          number of current timer conflicts
    {timer1exists}               true if timer 1 available
    {timer2exists}               true if timer 2 available
    ...
    {timer15exists}              true if timer 15 available
    {timers[]}                   array with active timers (local and remote if remotetimers plugin is in use)
    {timers[title]}              title of timer
    {timers[datetime]}           date and time of timer
    {timers[recording]}          true if timer is recording currently
    {timers[channelname]}        name of channel for which timer is created
    {timers[channelnumber]}      number of channel
    {timers[channelid]}          ChannelID of channel
    {timers[channellogoexists]}  true if channel logo exists
    -->


    <!-- Available Variables discusage:
    {freetime}                available disc capacity in hh:mm
    {freepercent}             available disc capacity in percent
    {usedpercent}             used disc capacity in percent
    {freegb}                  available disc capacity in gigabytes
    {discalert}               true if disc usage is > 95%
    {vdrusagestring}          localized VDR internal usage string
    -->
    <discusage>
        <area x="89%" y="11%" width="10%" height="16%" layer="1">
            <fill condition="lt({freepercent}, 6)" color="{clrTransRed}" />
            <fill condition="gt({freepercent}, 5)" color="{clrBackground}" />
            <drawimage imagetype="skinpart" path="discpercent" x="0" y="82%" width="{areawidth}" height="18%"/>
        </area>
        <area x="89%" y="11%" width="10%" height="16%" layer="2">
            <drawimage imagetype="icon" path="ico_discusage" align="center" y="2" width="{areawidth}*65/100" height="{areawidth}*65/100"/>
            <drawtext align="center" y="42%" font="{vdrOsd}" fontsize="18%" color="{clrGold}" text="{freegb}h {tr(free)}" />
            <drawrectangle x="{areawidth}*{usedpercent}/100" y="82%" width="{areawidth} - {areawidth}*{usedpercent}/100" height="18%" color="{clrTransBlack}" />
            <drawtext align="center" y="82%" font="{vdrOsd}" fontsize="19%" color="{clrWhite}" text="{usedpercent}%" />
        </area>        
    </discusage>

    <!-- Available Variables devices:
    {numdevices}                number of available devices
    {devices[]}                 array with available devices
    {devices[num]}              number of current device
    {devices[type]}             type of device (DVB-S, DVB-C, ...)
    {devices[istuned]}          true if device is currently tuned to a transponder
    {devices[livetv]}           true if device is currently playing livetv
    {devices[recording]}        true if device is currently recording
    {devices[hascam]}           true if device has a CAM
    {devices[cam]}              number of CAM
    {devices[signalstrength]}   signalstrength of devcie
    {devices[signalquality]}    signalstrength of devcie
    {devices[channelnumber]}    number of the currently tuned channel
    {devices[channelname]}      name of the currently tuned channel
    {devices[channelid]}        ID of the currently tuned channel
    {devices[source]}           source of the currently tuned channel
    -->
    <devices>
    </devices>

    <!-- Available Variables systemload:
    {load}                      current system load
    -->
    <systemload>
    </systemload>

    <menuitems x="{areawidth}*0.005" y="10%" orientation="vertical" width="29%" height="80%" align="center" numlistelements="10">
        <!-- Available Variables main menu listelement:
        {label}                   label of menu item
        {number}                  number of menu item (or empty string if not set)
        {icon}                    path of appropriate icon
        {current}                 true if item is currently selected 
        {separator}               true if item is a list separator 
        -->
        <listelement>
            <area x="0" width="100%" layer="2">
                <drawimage condition="not{current}" imagetype="skinpart" path="menubutton" x="0" y="1%" width="{areawidth}" height="{areaheight}*0.98"/>
                <drawimage condition="{current}" imagetype="skinpart" path="menubuttonactive" x="0" y="1%" width="{areawidth}" height="{areaheight}*0.98"/>
            </area>
            <area x="0" width="100%" layer="3">
                <drawimage imagetype="menuicon" path="{icon}" x="10" valign="center" width="{areaheight}*0.8" height="{areaheight}*0.8"/>
            </area>
            <areascroll scrollelement="menutext" mode="carriagereturn" orientation="horizontal" delay="1000" scrollspeed="medium" x="23%" width="77%" layer="3">
                <drawtext condition="not{current}" name="menutext" x="0" valign="center" font="{vdrOsd}" fontsize="48%" color="{clrFontMenuItem}" text="{number} {label}" />
                <drawtext condition="{current}" name="menutext" x="0" valign="center" font="{vdrOsd}" fontsize="48%" color="{clrFontMenuItemSelected}" text="{number} {label}" />
            </areascroll>
        </listelement>
        <!-- additional element which is drawn for current element -->
        <!-- Available Variables main menu currentelement:
        {label}                   label of menu item
        {number}                  number of menu item (or empty string if not set)
        {icon}                    path of appropriate icon
        -->
        <currentelement delay="50" fadetime="0">
        </currentelement>
    </menuitems>

</menumain>
